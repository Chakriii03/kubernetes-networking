KUBERNETES NETWORKING

1.clusterip

mkdir clusterip
cd clusrerip/
vi deploy.yml 
kind: Deployment
apiVersion: apps/v1
metadata:
   name: flipkart
spec:
   replicas: 1
   selector:
    matchLabels:
     name: deployment
   template:
     metadata:
       name: signupmodule
       labels:
         name: deployment
     spec:
      containers:
        - name: signup
          image: httpd
          ports:
          - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  name: signupservice
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: deployment
  type: ClusterIP


kubectl apply -f .
kubectl get deploy
kubectl get rs
kubectl get pods
kubectl get svc
curl pasteip with :80(port no)
kubectl decribe svc
kubectl get pods -o wide
kubectl delete -f .


2.nodeport
 
cd
mkdir nodeport
ls
cp clusterip/* nodeport/
vi deploy.yml
kind: Deployment
apiVersion: apps/v1
metadata:
   name: flipkart
spec:
   replicas: 1
   selector:
    matchLabels:
     name: deployment
   template:
     metadata:
       name: signupmodule
       labels:
         name: deployment
     spec:
      containers:
        - name: signup
          image: httpd
          ports:
          - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  name: signupservice
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: deployment
  type: NodePort

kubectl apply -f .
kubectl get deploy
kubectl get rs
kubectl get pods
kubectl get svc
curl pasteip with port no (30281)
curl pasteip
kubectl decribe signupservice
kubectl delete -f .


3.Loadbalancer

vi deploy.yml
kind: Deployment
apiVersion: apps/v1
metadata:
   name: flipkart
spec:
   replicas: 1
   selector:
    matchLabels:
     name: deployment
   template:
     metadata:
       name: signupmodule
       labels:
         name: deployment
     spec:
      containers:
        - name: signup
          image: httpd
          ports:
          - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  name: signupservice
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    name: deployment
  type: LoadBalancer

kubectl apply -f .
kubectl get pods
kubectl get rs
kubectl get deploy
kubectl get svc
kubectl delete -f .




